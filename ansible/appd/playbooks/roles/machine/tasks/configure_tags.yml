
#todo make reading variables more generic, so that execution does not depend on specific file's content

- name: Get metadata file content
  command: "cat {{ metadata_file_path }}"
  register: metadata_file_content
  ignore_errors: true
  changed_when: false
  when: 
    - metadata_file_path is defined
    - ansible_os_family == 'RedHat' or ansible_os_family == 'Debian'

- name: Get metadata file content
  command: "type {{ metadata_file_path }}"  #Should this be win_shell?
  register: metadata_file_content
  ignore_errors: true
  changed_when: false
  when: 
    - metadata_file_path is defined
    - ansible_os_family == 'Windows'

- name: Print metadata_file_content
  ansible.builtin.debug:
    msg: "metadata_file_content is '{{ metadata_file_content }}'."

- name: Set values based on metadata information
  set_fact:
    metadata_environment: "{{ metadata_file_content.stdout | regex_search('classification:(.*)\\n', '\\1') | first }}"
  ignore_errors: true
  when: 
    - metadata_file_content.stdout is defined

- name: Set values based on metadata information
  set_fact:
    metadata_primary_application: "{{ metadata_file_content.stdout | regex_search('primary_application:(.*)\\n', '\\1') | first }}"
  ignore_errors: true
  when: 
    - metadata_file_content.stdout is defined

- name: Create and add items to dictionary
  set_fact: 
      machine_custom_tags_final: "{{ machine_custom_tags_final | default({}) | combine(machine_custom_tags) | combine ({ item.key : item.value }) }}"
  with_items:
    - { 'key': 'primary_application' , 'value': "[\"{{ metadata_primary_application | default('unknown') | trim | regex_replace('\"', '') }}\"]"}
    - { 'key': 'environment' , 'value': "['{{ metadata_environment | default('unknown') | trim | regex_replace('\"', '') }}']"}
    - { 'key': 'os_distribution' , 'value': "['{{ ansible_distribution | default('unknown') }}']"}
    - { 'key': 'os_distribution_version' , 'value': "['{{ ansible_distribution_version | default('unknown') }}']"}

- name: Print machine_custom_tags_final
  ansible.builtin.debug:
    msg: "{{ machine_custom_tags_final }}"

- name: Create and add items to dictionary
  set_fact: 
      machine_custom_tags_final: "{{ machine_custom_tags_final|to_nice_yaml|indent(4)}}"
  when: 
    - machine_custom_tags_final is defined

- name: Update Machine Agent custom tags values
  become: true
  template:
    src: templates/lin-ServerMonitoring.yml.j2
    dest: '{{ machine_agent_dest_folder_linux }}/extensions/ServerMonitoring/conf/ServerMonitoring.yml'
    owner: "{{ appdynamics_user }}"
    group: "{{ appdynamics_user }}"
    mode: 0755
  changed_when: false
  when: 
    - machine_custom_tags_final is defined
    - ansible_os_family == 'RedHat' or ansible_os_family == 'Debian'

- name: Update Machine Agent custom tags values
  template:
    src: templates/win-ServerMonitoring.yml.j2
    dest: '{{ machine_agent_dest_folder_win }}/extensions/ServerMonitoring/conf/ServerMonitoring.yml'
    force: yes
  changed_when: false
  when: 
    - machine_custom_tags_final is defined
    - ansible_os_family == 'Windows'

      