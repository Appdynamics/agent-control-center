---
- debug:
    msg: "Apply logger setting to Machine agent on Linux"

# Check if we need to apply the logger settings. The check role
# updates the {{ apply_logger_settings }} variable
- include_tasks: check.yaml
  vars:
    logger_agent_dest_folder: "{{ machine_agent_dest_folder_linux }}"

# Apply log setting to Linux hosts
- name: Set the log level for the Machine agent on Linux
  become: false
  block:
  - debug:
      msg: "Requested log level = {{ agent_log_level }} - Logger = {{ agent_loggers }}"

  - name: Create a local directory to manipulate the log4j file
    tempfile:
      state: directory
      suffix: build
    register: temp_dir
    changed_when: false

  - name: Copy the log4j file down to update it localy
    fetch:
      src: '{{ machine_agent_dest_folder_linux }}/conf/logging/log4j.xml'
      dest: '{{ temp_dir.path }}/'
      mode: 0755
      flat: yes
    changed_when: false

  - name: Check which xpath entries are found in the log4j file
    xml:
      # path: '{{ machine_agent_dest_folder_linux }}/conf/logging/log4j.xml'
      path: '{{ temp_dir.path }}/log4j.xml'
      xpath: //Logger[@name='{{ item }}']
      count: yes
    register: hits
    delegate_to: localhost
    loop: "{{ agent_loggers }}"

  - name: Set the log level for the machine agent
    xml:
      # path: '{{ machine_agent_dest_folder_linux }}/conf/logging/log4j.xml'
      path: '{{ temp_dir.path }}/log4j.xml'
      xpath: "{{ item.actions.xpath }}" # //Logger[@name='{{ item }}']
      attribute: level
      value: "{{ agent_log_level }}"
    loop: "{{ hits.results }}" # "{{ agent_loggers }}"
    delegate_to: localhost
    when: item.count >= 1
    register: result
    changed_when: # only report changes if they are not part of installing the agent
      - logger_role_standalone
      - result.changed

  - name: Copy the local file back to the host
    become: true
    copy:
       src: '{{ temp_dir.path }}/log4j.xml'
       dest: '{{ machine_agent_dest_folder_linux }}/conf/logging/log4j.xml'
    changed_when: false

  - name: Delete the temp directory
    file:
       path: "{{ temp_dir.path }}"
       state: absent
    delegate_to: localhost
    changed_when: false
  when: apply_logger_settings
